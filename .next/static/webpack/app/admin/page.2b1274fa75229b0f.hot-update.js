"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./lib/tasks.ts":
/*!**********************!*\
  !*** ./lib/tasks.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTaskNote: function() { return /* binding */ addTaskNote; },\n/* harmony export */   createTask: function() { return /* binding */ createTask; },\n/* harmony export */   deleteTask: function() { return /* binding */ deleteTask; },\n/* harmony export */   downloadTaskDocument: function() { return /* binding */ downloadTaskDocument; },\n/* harmony export */   getAllTasks: function() { return /* binding */ getAllTasks; },\n/* harmony export */   getTaskById: function() { return /* binding */ getTaskById; },\n/* harmony export */   getTaskDocuments: function() { return /* binding */ getTaskDocuments; },\n/* harmony export */   getTaskNotes: function() { return /* binding */ getTaskNotes; },\n/* harmony export */   getTasks: function() { return /* binding */ getTasks; },\n/* harmony export */   updateTask: function() { return /* binding */ updateTask; },\n/* harmony export */   updateTaskStatus: function() { return /* binding */ updateTaskStatus; },\n/* harmony export */   uploadTaskDocument: function() { return /* binding */ uploadTaskDocument; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n\nasync function createTask(task) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tasks\").insert(task).select().single();\n    return {\n        data,\n        error\n    };\n}\nasync function getTasks(userId) {\n    let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tasks\").select(\"\\n      *,\\n      assigned_user:users!tasks_assigned_to_fkey(full_name, email),\\n      assigned_by_user:users!tasks_assigned_by_fkey(full_name, email)\\n    \").order(\"created_at\", {\n        ascending: false\n    });\n    if (userId) {\n        query = query.eq(\"assigned_to\", userId);\n    }\n    const { data, error } = await query;\n    if (error) {\n        console.error(\"Error fetching tasks:\", error);\n        return [];\n    }\n    return data || [];\n}\n// Alias for admin to get all tasks\nasync function getAllTasks() {\n    return getTasks() // Get all tasks without userId filter\n    ;\n}\nasync function getTaskById(taskId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tasks\").select(\"\\n      *,\\n      assigned_user:users!tasks_assigned_to_fkey(full_name, email),\\n      assigned_by_user:users!tasks_assigned_by_fkey(full_name, email)\\n    \").eq(\"id\", taskId).single();\n    if (error) {\n        console.error(\"Error fetching task:\", error);\n        return null;\n    }\n    return data;\n}\nasync function updateTask(taskId, updates) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tasks\").update(updates).eq(\"id\", taskId).select().single();\n    return {\n        data,\n        error\n    };\n}\nasync function updateTaskStatus(taskId, status) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tasks\").update({\n        status,\n        updated_at: new Date().toISOString()\n    }).eq(\"id\", taskId).select().single();\n    return {\n        data,\n        error\n    };\n}\nasync function deleteTask(taskId) {\n    const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tasks\").delete().eq(\"id\", taskId);\n    return {\n        error\n    };\n}\nasync function uploadTaskDocument(file, taskId, uploadedBy) {\n    const fileExt = file.name.split(\".\").pop();\n    const fileName = \"\".concat(Date.now(), \".\").concat(fileExt);\n    const filePath = \"\".concat(taskId, \"/\").concat(fileName);\n    const { data: uploadData, error: uploadError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.storage.from(\"task-documents\").upload(filePath, file);\n    if (uploadError) {\n        return {\n            data: null,\n            error: uploadError\n        };\n    }\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"task_documents\").insert({\n        task_id: taskId,\n        file_name: file.name,\n        file_path: filePath,\n        file_size: file.size,\n        uploaded_by: uploadedBy\n    }).select().single();\n    return {\n        data,\n        error\n    };\n}\nasync function getTaskDocuments(taskId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"task_documents\").select(\"*\").eq(\"task_id\", taskId).order(\"created_at\", {\n        ascending: false\n    });\n    if (error) {\n        console.error(\"Error fetching task documents:\", error);\n        return [];\n    }\n    return data || [];\n}\nasync function downloadTaskDocument(filePath) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.storage.from(\"task-documents\").download(filePath);\n    return {\n        data,\n        error\n    };\n}\nasync function addTaskNote(taskId, userId, note) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"task_notes\").insert({\n        task_id: taskId,\n        user_id: userId,\n        note\n    }).select().single();\n    return {\n        data,\n        error\n    };\n}\nasync function getTaskNotes(taskId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"task_notes\").select(\"\\n      *,\\n      user:users(full_name, email)\\n    \").eq(\"task_id\", taskId).order(\"created_at\", {\n        ascending: false\n    });\n    if (error) {\n        console.error(\"Error fetching task notes:\", error);\n        return [];\n    }\n    return data || [];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/tasks.ts\n"));

/***/ })

});